// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`BodyComponent should render an input field for search 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <BodyComponent />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <ForwardRef>
        <p>
          This is a collection of git cheats and tips I’ve gathered. I’ll add more as time goes by
        </p>
        <Connect(SearchComponent) />
        <Connect(CategoryCollectionComponent) />
      </ForwardRef>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <p>
            This is a collection of git cheats and tips I’ve gathered. I’ll add more as time goes by
          </p>,
          <Connect(SearchComponent) />,
          <Connect(CategoryCollectionComponent) />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "This is a collection of git cheats and tips I’ve gathered. I’ll add more as time goes by",
          },
          "ref": null,
          "rendered": "This is a collection of git cheats and tips I’ve gathered. I’ll add more as time goes by",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "styled__Container-kflsgi-4",
          "isStatic": true,
          "rules": Array [
            "width:90%;margin:0 auto;position:relative;height:100%;",
          ],
        },
        "displayName": "styled__Container",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "styled__Container-kflsgi-4",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "styled__Body-kflsgi-6",
        "isStatic": true,
        "rules": Array [
          "p{font-size:14px;color:var(--cool-grey);text-align:center;line-height:17px;font-weight:300;margin-top:44px;}",
        ],
      },
      "displayName": "styled__Body",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "styled__Body-kflsgi-6",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <ForwardRef>
          <p>
            This is a collection of git cheats and tips I’ve gathered. I’ll add more as time goes by
          </p>
          <Connect(SearchComponent) />
          <Connect(CategoryCollectionComponent) />
        </ForwardRef>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <p>
              This is a collection of git cheats and tips I’ve gathered. I’ll add more as time goes by
            </p>,
            <Connect(SearchComponent) />,
            <Connect(CategoryCollectionComponent) />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "This is a collection of git cheats and tips I’ve gathered. I’ll add more as time goes by",
            },
            "ref": null,
            "rendered": "This is a collection of git cheats and tips I’ve gathered. I’ll add more as time goes by",
            "type": "p",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "styled__Container-kflsgi-4",
            "isStatic": true,
            "rules": Array [
              "width:90%;margin:0 auto;position:relative;height:100%;",
            ],
          },
          "displayName": "styled__Container",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "styled__Container-kflsgi-4",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "styled__Body-kflsgi-6",
          "isStatic": true,
          "rules": Array [
            "p{font-size:14px;color:var(--cool-grey);text-align:center;line-height:17px;font-weight:300;margin-top:44px;}",
          ],
        },
        "displayName": "styled__Body",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "styled__Body-kflsgi-6",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
